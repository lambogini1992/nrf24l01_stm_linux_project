!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ARCH	Makefile	/^export ARCH ?= arm$/;"	m
CROSS_COMPILE	Makefile	/^export CROSS_COMPILE ?= arm-linux-gnueabihf-$/;"	m
KERNEL_DIR	Makefile	/^KERNEL_DIR ?= ..\/linux$/;"	m
____versions	fake_net.mod.c	/^static const struct modversion_info ____versions[]$/;"	v	typeref:typename:const struct modversion_info[]__used __section (__versions)	file:
all	Makefile	/^all:$/;"	t
buf_lock	fake_net.c	/^	spinlock_t buf_lock;$/;"	m	struct:fake_net	typeref:typename:spinlock_t	file:
clean	Makefile	/^clean:$/;"	t
data	snull.c	/^	u8 data[ETH_DATA_LEN];$/;"	m	struct:snull_packet	typeref:typename:u8[]	file:
datalen	snull.c	/^	int	datalen;$/;"	m	struct:snull_packet	typeref:typename:int	file:
dev	snull.c	/^	struct net_device *dev;$/;"	m	struct:snull_packet	typeref:struct:net_device *	file:
dev	snull.c	/^	struct net_device *dev;$/;"	m	struct:snull_priv	typeref:struct:net_device *	file:
fake_net	fake_net.c	/^struct fake_net {$/;"	s	file:
fake_net_dt_ids	fake_net.c	/^static const struct of_device_id fake_net_dt_ids[] = {$/;"	v	typeref:typename:const struct of_device_id[]	file:
fake_net_ieee_ed	fake_net.c	/^fake_net_ieee_ed(struct ieee802154_hw *hw, u8 *level)$/;"	f	typeref:typename:int	file:
fake_net_ieee_set_channel	fake_net.c	/^fake_net_ieee_set_channel(struct ieee802154_hw *hw, u8 page, u8 channel)$/;"	f	typeref:typename:int	file:
fake_net_ieee_set_promiscuous_mode	fake_net.c	/^fake_net_ieee_set_promiscuous_mode(struct ieee802154_hw *hw, const bool on)$/;"	f	typeref:typename:int	file:
fake_net_ieee_set_txpower	fake_net.c	/^fake_net_ieee_set_txpower(struct ieee802154_hw *hw, s32 mbm)$/;"	f	typeref:typename:int	file:
fake_net_ieee_start	fake_net.c	/^fake_net_ieee_start(struct ieee802154_hw *hw)$/;"	f	typeref:typename:int	file:
fake_net_ieee_stop	fake_net.c	/^fake_net_ieee_stop(struct ieee802154_hw *hw)$/;"	f	typeref:typename:void	file:
fake_net_ieee_xmit	fake_net.c	/^fake_net_ieee_xmit(struct ieee802154_hw *hw, struct sk_buff *skb)$/;"	f	typeref:typename:int	file:
fake_net_init_module	fake_net.c	/^static int __init fake_net_init_module(void)$/;"	f	typeref:typename:int __init	file:
fake_net_irqwork	fake_net.c	/^fake_net_irqwork(struct work_struct *work)$/;"	f	typeref:typename:void	file:
fake_net_ops	fake_net.c	/^static const struct ieee802154_ops fake_net_ops = {$/;"	v	typeref:typename:const struct ieee802154_ops	file:
fake_net_probe	fake_net.c	/^static int fake_net_probe(struct spi_device *spi)$/;"	f	typeref:typename:int	file:
fake_net_remove	fake_net.c	/^static int fake_net_remove(struct spi_device *spi)$/;"	f	typeref:typename:int	file:
fake_net_rm_module	fake_net.c	/^static void __exit fake_net_rm_module(void)$/;"	f	typeref:typename:void __exit	file:
fake_net_rx_complete	fake_net.c	/^fake_net_rx_complete(struct ieee802154_hw *hw)$/;"	f	typeref:typename:void	file:
fake_net_spi_driver	fake_net.c	/^static  struct spi_driver fake_net_spi_driver = {$/;"	v	typeref:struct:spi_driver	file:
hw	fake_net.c	/^	struct ieee802154_hw *hw;$/;"	m	struct:fake_net	typeref:struct:ieee802154_hw *	file:
irqwork	fake_net.c	/^	struct work_struct irqwork;$/;"	m	struct:fake_net	typeref:struct:work_struct	file:
is_busy	fake_net.c	/^	bool is_busy;$/;"	m	struct:fake_net	typeref:typename:bool	file:
lock	snull.c	/^	spinlock_t lock;$/;"	m	struct:snull_priv	typeref:typename:spinlock_t	file:
lockup	snull.c	/^static int lockup = 0;$/;"	v	typeref:typename:int	file:
map	fake_net.c	/^	struct regmap *map;$/;"	m	struct:fake_net	typeref:struct:regmap *	file:
napi	snull.c	/^	struct napi_struct napi;$/;"	m	struct:snull_priv	typeref:struct:napi_struct	file:
next	snull.c	/^	struct snull_packet *next;$/;"	m	struct:snull_packet	typeref:struct:snull_packet *	file:
one_to_be_sent	fake_net.c	/^	bool one_to_be_sent;$/;"	m	struct:fake_net	typeref:typename:bool	file:
pool_size	snull.c	/^int pool_size = 8;$/;"	v	typeref:typename:int
post_tx_done	fake_net.c	/^	bool post_tx_done;$/;"	m	struct:fake_net	typeref:typename:bool	file:
ppool	snull.c	/^	struct snull_packet *ppool;$/;"	m	struct:snull_priv	typeref:struct:snull_packet *	file:
rx_int_enabled	snull.c	/^	int rx_int_enabled;$/;"	m	struct:snull_priv	typeref:typename:int	file:
rx_queue	snull.c	/^	struct snull_packet *rx_queue;  \/* List of incoming packets *\/$/;"	m	struct:snull_priv	typeref:struct:snull_packet *	file:
skb	snull.c	/^	struct sk_buff *skb;$/;"	m	struct:snull_priv	typeref:struct:sk_buff *	file:
snull_change_mtu	snull.c	/^int snull_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	typeref:typename:int
snull_cleanup	snull.c	/^void snull_cleanup(void)$/;"	f	typeref:typename:void
snull_config	snull.c	/^int snull_config(struct net_device *dev, struct ifmap *map)$/;"	f	typeref:typename:int
snull_dequeue_buf	snull.c	/^struct snull_packet *snull_dequeue_buf(struct net_device *dev)$/;"	f	typeref:struct:snull_packet *
snull_devs	snull.c	/^struct net_device *snull_devs[2];$/;"	v	typeref:struct:net_device * [2]
snull_enqueue_buf	snull.c	/^void snull_enqueue_buf(struct net_device *dev, struct snull_packet *pkt)$/;"	f	typeref:typename:void
snull_get_tx_buffer	snull.c	/^struct snull_packet *snull_get_tx_buffer(struct net_device *dev)$/;"	f	typeref:struct:snull_packet *
snull_header	snull.c	/^int snull_header(struct sk_buff *skb, struct net_device *dev,$/;"	f	typeref:typename:int
snull_header_ops	snull.c	/^static const struct header_ops snull_header_ops = {$/;"	v	typeref:typename:const struct header_ops	file:
snull_hw_tx	snull.c	/^static void snull_hw_tx(char *buf, int len, struct net_device *dev)$/;"	f	typeref:typename:void	file:
snull_init	snull.c	/^void snull_init(struct net_device *dev)$/;"	f	typeref:typename:void
snull_init_module	snull.c	/^int snull_init_module(void)$/;"	f	typeref:typename:int
snull_interrupt	snull.c	/^static void (*snull_interrupt)(int, void *, struct pt_regs *);$/;"	v	typeref:typename:void (*)(int,void *,struct pt_regs *)	file:
snull_ioctl	snull.c	/^int snull_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	typeref:typename:int
snull_napi_interrupt	snull.c	/^static void snull_napi_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	typeref:typename:void	file:
snull_netdev_ops	snull.c	/^static const struct net_device_ops snull_netdev_ops = {$/;"	v	typeref:typename:const struct net_device_ops	file:
snull_open	snull.c	/^int snull_open(struct net_device *dev)$/;"	f	typeref:typename:int
snull_packet	snull.c	/^struct snull_packet {$/;"	s	file:
snull_poll	snull.c	/^static int snull_poll(struct napi_struct *napi, int budget)$/;"	f	typeref:typename:int	file:
snull_priv	snull.c	/^struct snull_priv {$/;"	s	file:
snull_rebuild_header	snull.c	/^int snull_rebuild_header(struct sk_buff *skb)$/;"	f	typeref:typename:int
snull_regular_interrupt	snull.c	/^static void snull_regular_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	typeref:typename:void	file:
snull_release	snull.c	/^int snull_release(struct net_device *dev)$/;"	f	typeref:typename:int
snull_release_buffer	snull.c	/^void snull_release_buffer(struct snull_packet *pkt)$/;"	f	typeref:typename:void
snull_rx	snull.c	/^void snull_rx(struct net_device *dev, struct snull_packet *pkt)$/;"	f	typeref:typename:void
snull_rx_ints	snull.c	/^static void snull_rx_ints(struct net_device *dev, int enable)$/;"	f	typeref:typename:void	file:
snull_setup_pool	snull.c	/^void snull_setup_pool(struct net_device *dev)$/;"	f	typeref:typename:void
snull_stats	snull.c	/^struct net_device_stats *snull_stats(struct net_device *dev)$/;"	f	typeref:struct:net_device_stats *
snull_teardown_pool	snull.c	/^void snull_teardown_pool(struct net_device *dev)$/;"	f	typeref:typename:void
snull_tx	snull.c	/^int snull_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	typeref:typename:int
snull_tx_timeout	snull.c	/^void snull_tx_timeout (struct net_device *dev)$/;"	f	typeref:typename:void
spi	fake_net.c	/^	struct spi_device *spi;$/;"	m	struct:fake_net	typeref:struct:spi_device *	file:
stats	snull.c	/^	struct net_device_stats stats;$/;"	m	struct:snull_priv	typeref:struct:net_device_stats	file:
status	snull.c	/^	int status;$/;"	m	struct:snull_priv	typeref:typename:int	file:
timeout	snull.c	/^static int timeout = SNULL_TIMEOUT;$/;"	v	typeref:typename:int	file:
timer	fake_net.c	/^	struct timer_list timer;$/;"	m	struct:fake_net	typeref:struct:timer_list	file:
tx_buf	fake_net.c	/^	struct sk_buff *tx_buf;$/;"	m	struct:fake_net	typeref:struct:sk_buff *	file:
tx_packetdata	snull.c	/^	u8 *tx_packetdata;$/;"	m	struct:snull_priv	typeref:typename:u8 *	file:
tx_packetlen	snull.c	/^	int tx_packetlen;$/;"	m	struct:snull_priv	typeref:typename:int	file:
use_napi	snull.c	/^static int use_napi = 1; \/\/jypan: 0$/;"	v	typeref:typename:int	file:
